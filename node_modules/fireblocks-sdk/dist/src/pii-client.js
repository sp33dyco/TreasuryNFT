"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PIIEncryption = void 0;
const pii_sdk_1 = __importStar(require("@notabene/pii-sdk"));
const requiredFields = [
    "baseURLPII",
    "audiencePII",
    "clientId",
    "clientSecret",
    "authURL",
    "jsonDidKey",
];
class PIIEncryption {
    constructor(config) {
        this.config = config;
        this.config = config;
        const missingFields = requiredFields.filter((field) => !(field in this.config));
        if (missingFields.length > 0) {
            throw new Error(`Missing PII configuration fields: ${missingFields.join(", ")}`);
        }
        this.toolset = new pii_sdk_1.default({
            piiURL: config.baseURLPII,
            audience: config.audiencePII,
            clientId: config.clientId,
            clientSecret: config.clientSecret,
            authURL: config.authURL,
        });
    }
    hybridEncode(transaction, travelRuleEncryptionOptions) {
        return __awaiter(this, void 0, void 0, function* () {
            const { travelRuleMessage } = transaction;
            const pii = travelRuleMessage.pii || {
                originator: travelRuleMessage.originator,
                beneficiary: travelRuleMessage.beneficiary,
            };
            const { jsonDidKey } = this.config;
            const counterpartyDIDKey = travelRuleEncryptionOptions === null || travelRuleEncryptionOptions === void 0 ? void 0 : travelRuleEncryptionOptions.beneficiaryPIIDidKey;
            let piiIvms;
            try {
                piiIvms = yield this.toolset.generatePIIField({
                    pii,
                    originatorVASPdid: travelRuleMessage.originatorVASPdid,
                    beneficiaryVASPdid: travelRuleMessage.beneficiaryVASPdid,
                    counterpartyDIDKey,
                    keypair: JSON.parse(jsonDidKey),
                    senderDIDKey: JSON.parse(jsonDidKey).did,
                    encryptionMethod: (travelRuleEncryptionOptions === null || travelRuleEncryptionOptions === void 0 ? void 0 : travelRuleEncryptionOptions.sendToProvider) ? pii_sdk_1.PIIEncryptionMethod.HYBRID
                        : pii_sdk_1.PIIEncryptionMethod.END_2_END,
                });
            }
            catch (error) {
                const errorMessage = error.message || error.toString();
                const errorDetails = JSON.stringify(error);
                throw new Error(`Failed to generate PII fields error: ${errorMessage}. Details: ${errorDetails}`);
            }
            transaction.travelRuleMessage = this.travelRuleMessageHandler(travelRuleMessage, piiIvms);
            return transaction;
        });
    }
    travelRuleMessageHandler(travelRuleMessage, piiIvms) {
        travelRuleMessage.beneficiary = piiIvms.beneficiary;
        travelRuleMessage.originator = piiIvms.originator;
        travelRuleMessage.beneficiary = {
            originatorPersons: piiIvms.beneficiary.beneficiaryPersons,
            accountNumber: piiIvms.beneficiary.accountNumber,
        };
        return travelRuleMessage;
    }
}
exports.PIIEncryption = PIIEncryption;
//# sourceMappingURL=pii-client.js.map