"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.NCW = exports.SmartTransferTicketTermStatus = exports.SmartTransfersTicketStatus = exports.SmartTransfersTicketDirection = exports.TokenLinkPermission = exports.NFTOwnershipWalletType = exports.NFTOwnershipStatus = exports.OrderValues = exports.GetOwnedAssetsSortValues = exports.GetOwnedCollectionsSortValues = exports.GetOwnedNFTsSortValues = exports.GetNFTsSortValues = exports.TimePeriod = exports.ExchangeReply = exports.SettleResponseCode = exports.TransferTicketTermStatus = exports.TransferTicketStatus = exports.Web3ConnectionMethod = exports.Web3ConnectionType = exports.TransactionOperation = exports.VirtualType = exports.PeerType = exports.TransactionStatus = exports.TransactionOrder = exports.NetworkDestType = exports.NetworkScheme = exports.FeeLevel = exports.Web3ConnectionFeeLevel = exports.TravelRuleAddressTypeCode = exports.SigningAlgorithm = exports.VaultAssetActivationStatus = exports.VirtualAffiliation = void 0;
var VirtualAffiliation;
(function (VirtualAffiliation) {
    VirtualAffiliation["OFF_EXCHANGE"] = "OFF_EXCHANGE";
    VirtualAffiliation["DEFAULT"] = "DEFAULT";
})(VirtualAffiliation = exports.VirtualAffiliation || (exports.VirtualAffiliation = {}));
var VaultAssetActivationStatus;
(function (VaultAssetActivationStatus) {
    VaultAssetActivationStatus["PENDING_ACTIVATION"] = "PENDING_ACTIVATION";
    VaultAssetActivationStatus["ACTIVATION_FAILED"] = "ACTIVATION_FAILED";
    VaultAssetActivationStatus["READY"] = "READY";
})(VaultAssetActivationStatus = exports.VaultAssetActivationStatus || (exports.VaultAssetActivationStatus = {}));
var SigningAlgorithm;
(function (SigningAlgorithm) {
    SigningAlgorithm["MPC_ECDSA_SECP256K1"] = "MPC_ECDSA_SECP256K1";
    SigningAlgorithm["MPC_ECDSA_SECP256R1"] = "MPC_ECDSA_SECP256R1";
    SigningAlgorithm["MPC_EDDSA_ED25519"] = "MPC_EDDSA_ED25519";
})(SigningAlgorithm = exports.SigningAlgorithm || (exports.SigningAlgorithm = {}));
var TravelRuleAddressTypeCode;
(function (TravelRuleAddressTypeCode) {
    TravelRuleAddressTypeCode["HOME"] = "HOME";
    TravelRuleAddressTypeCode["BIZZ"] = "BIZZ";
    TravelRuleAddressTypeCode["GEOG"] = "GEOG";
})(TravelRuleAddressTypeCode = exports.TravelRuleAddressTypeCode || (exports.TravelRuleAddressTypeCode = {}));
var Web3ConnectionFeeLevel;
(function (Web3ConnectionFeeLevel) {
    Web3ConnectionFeeLevel["HIGH"] = "HIGH";
    Web3ConnectionFeeLevel["MEDIUM"] = "MEDIUM";
})(Web3ConnectionFeeLevel = exports.Web3ConnectionFeeLevel || (exports.Web3ConnectionFeeLevel = {}));
var FeeLevel;
(function (FeeLevel) {
    FeeLevel["HIGH"] = "HIGH";
    FeeLevel["MEDIUM"] = "MEDIUM";
    FeeLevel["LOW"] = "LOW";
})(FeeLevel = exports.FeeLevel || (exports.FeeLevel = {}));
var NetworkScheme;
(function (NetworkScheme) {
    NetworkScheme["DEFAULT"] = "DEFAULT";
    NetworkScheme["CUSTOM"] = "CUSTOM";
    NetworkScheme["NONE"] = "NONE";
})(NetworkScheme = exports.NetworkScheme || (exports.NetworkScheme = {}));
var NetworkDestType;
(function (NetworkDestType) {
    NetworkDestType["VAULT_ACCOUNT"] = "VAULT";
    NetworkDestType["EXCHANGE_ACCOUNT"] = "EXCHANGE";
    NetworkDestType["FIAT_ACCOUNT"] = "FIAT_ACCOUNT";
})(NetworkDestType = exports.NetworkDestType || (exports.NetworkDestType = {}));
class MediaEntity {
}
var TransactionOrder;
(function (TransactionOrder) {
    TransactionOrder["CREATED_AT"] = "createdAt";
    TransactionOrder["LAST_UPDATED"] = "lastUpdated";
})(TransactionOrder = exports.TransactionOrder || (exports.TransactionOrder = {}));
var TransactionStatus;
(function (TransactionStatus) {
    TransactionStatus["SUBMITTED"] = "SUBMITTED";
    TransactionStatus["QUEUED"] = "QUEUED";
    TransactionStatus["PENDING_SIGNATURE"] = "PENDING_SIGNATURE";
    TransactionStatus["PENDING_AUTHORIZATION"] = "PENDING_AUTHORIZATION";
    TransactionStatus["PENDING_3RD_PARTY_MANUAL_APPROVAL"] = "PENDING_3RD_PARTY_MANUAL_APPROVAL";
    TransactionStatus["PENDING_3RD_PARTY"] = "PENDING_3RD_PARTY";
    /**
     * @deprecated
     */
    TransactionStatus["PENDING"] = "PENDING";
    TransactionStatus["BROADCASTING"] = "BROADCASTING";
    TransactionStatus["CONFIRMING"] = "CONFIRMING";
    /**
     * @deprecated Replaced by "COMPLETED"
     */
    TransactionStatus["CONFIRMED"] = "CONFIRMED";
    TransactionStatus["COMPLETED"] = "COMPLETED";
    TransactionStatus["PENDING_AML_SCREENING"] = "PENDING_AML_SCREENING";
    TransactionStatus["PARTIALLY_COMPLETED"] = "PARTIALLY_COMPLETED";
    TransactionStatus["CANCELLING"] = "CANCELLING";
    TransactionStatus["CANCELLED"] = "CANCELLED";
    TransactionStatus["REJECTED"] = "REJECTED";
    TransactionStatus["FAILED"] = "FAILED";
    TransactionStatus["TIMEOUT"] = "TIMEOUT";
    TransactionStatus["BLOCKED"] = "BLOCKED";
})(TransactionStatus = exports.TransactionStatus || (exports.TransactionStatus = {}));
var PeerType;
(function (PeerType) {
    PeerType["VAULT_ACCOUNT"] = "VAULT_ACCOUNT";
    PeerType["EXCHANGE_ACCOUNT"] = "EXCHANGE_ACCOUNT";
    PeerType["INTERNAL_WALLET"] = "INTERNAL_WALLET";
    PeerType["EXTERNAL_WALLET"] = "EXTERNAL_WALLET";
    PeerType["UNKNOWN"] = "UNKNOWN";
    PeerType["NETWORK_CONNECTION"] = "NETWORK_CONNECTION";
    PeerType["FIAT_ACCOUNT"] = "FIAT_ACCOUNT";
    PeerType["COMPOUND"] = "COMPOUND";
    PeerType["ONE_TIME_ADDRESS"] = "ONE_TIME_ADDRESS";
    PeerType["OEC_PARTNER"] = "OEC_PARTNER";
    PeerType["END_USER_WALLET"] = "END_USER_WALLET";
})(PeerType = exports.PeerType || (exports.PeerType = {}));
var VirtualType;
(function (VirtualType) {
    VirtualType["OFF_EXCHANGE"] = "OFF_EXCHANGE";
    VirtualType["DEFAULT"] = "DEFAULT";
    VirtualType["OEC_FEE_BANK"] = "OEC_FEE_BANK";
})(VirtualType = exports.VirtualType || (exports.VirtualType = {}));
var TransactionOperation;
(function (TransactionOperation) {
    TransactionOperation["TRANSFER"] = "TRANSFER";
    TransactionOperation["MINT"] = "MINT";
    TransactionOperation["BURN"] = "BURN";
    TransactionOperation["SUPPLY_TO_COMPOUND"] = "SUPPLY_TO_COMPOUND";
    TransactionOperation["REDEEM_FROM_COMPOUND"] = "REDEEM_FROM_COMPOUND";
    TransactionOperation["RAW"] = "RAW";
    TransactionOperation["CONTRACT_CALL"] = "CONTRACT_CALL";
    TransactionOperation["TYPED_MESSAGE"] = "TYPED_MESSAGE";
})(TransactionOperation = exports.TransactionOperation || (exports.TransactionOperation = {}));
var Web3ConnectionType;
(function (Web3ConnectionType) {
    Web3ConnectionType["WALLET_CONNECT"] = "WalletConnect";
})(Web3ConnectionType = exports.Web3ConnectionType || (exports.Web3ConnectionType = {}));
var Web3ConnectionMethod;
(function (Web3ConnectionMethod) {
    Web3ConnectionMethod["MOBILE"] = "MOBILE";
    Web3ConnectionMethod["DESKTOP"] = "DESKTOP";
    Web3ConnectionMethod["API"] = "API";
})(Web3ConnectionMethod = exports.Web3ConnectionMethod || (exports.Web3ConnectionMethod = {}));
var TransferTicketStatus;
(function (TransferTicketStatus) {
    TransferTicketStatus["OPEN"] = "OPEN";
    TransferTicketStatus["PARTIALLY_FULFILLED"] = "PARTIALLY_FULFILLED";
    TransferTicketStatus["FULFILLED"] = "FULFILLED";
    TransferTicketStatus["FAILED"] = "FAILED";
    TransferTicketStatus["CANCELED"] = "CANCELED";
})(TransferTicketStatus = exports.TransferTicketStatus || (exports.TransferTicketStatus = {}));
var TransferTicketTermStatus;
(function (TransferTicketTermStatus) {
    TransferTicketTermStatus["OPEN"] = "OPEN";
    TransferTicketTermStatus["FULFILLED"] = "FULFILLED";
})(TransferTicketTermStatus = exports.TransferTicketTermStatus || (exports.TransferTicketTermStatus = {}));
var SettleResponseCode;
(function (SettleResponseCode) {
    SettleResponseCode[SettleResponseCode["NONE"] = 0] = "NONE";
    SettleResponseCode[SettleResponseCode["NOTHING_TO_SETTLE"] = 1] = "NOTHING_TO_SETTLE";
})(SettleResponseCode = exports.SettleResponseCode || (exports.SettleResponseCode = {}));
var InitiatorType;
(function (InitiatorType) {
    InitiatorType["EXCHANGE"] = "EXCHANGE";
    InitiatorType["TRADER"] = "TRADER";
})(InitiatorType || (InitiatorType = {}));
var ExchangeReply;
(function (ExchangeReply) {
    ExchangeReply["REJECTED"] = "REJECTED";
    ExchangeReply["NOT_NEEDED"] = "NOT_NEEDED";
    ExchangeReply["FAILED"] = "FAILED";
})(ExchangeReply = exports.ExchangeReply || (exports.ExchangeReply = {}));
var TimePeriod;
(function (TimePeriod) {
    TimePeriod["DAY"] = "DAY";
    TimePeriod["WEEK"] = "WEEK";
})(TimePeriod = exports.TimePeriod || (exports.TimePeriod = {}));
var GetNFTsSortValues;
(function (GetNFTsSortValues) {
    GetNFTsSortValues["collectionName"] = "collection.name";
    GetNFTsSortValues["name"] = "name";
    GetNFTsSortValues["blockchainDescriptor"] = "blockchainDescriptor";
})(GetNFTsSortValues = exports.GetNFTsSortValues || (exports.GetNFTsSortValues = {}));
var GetOwnedNFTsSortValues;
(function (GetOwnedNFTsSortValues) {
    GetOwnedNFTsSortValues["ownershipLastUpdateTime"] = "ownershipLastUpdateTime";
    GetOwnedNFTsSortValues["name"] = "name";
    GetOwnedNFTsSortValues["collectionName"] = "collection.name";
    GetOwnedNFTsSortValues["blockchainDescriptor"] = "blockchainDescriptor";
})(GetOwnedNFTsSortValues = exports.GetOwnedNFTsSortValues || (exports.GetOwnedNFTsSortValues = {}));
var GetOwnedCollectionsSortValues;
(function (GetOwnedCollectionsSortValues) {
    GetOwnedCollectionsSortValues["name"] = "name";
})(GetOwnedCollectionsSortValues = exports.GetOwnedCollectionsSortValues || (exports.GetOwnedCollectionsSortValues = {}));
var GetOwnedAssetsSortValues;
(function (GetOwnedAssetsSortValues) {
    GetOwnedAssetsSortValues["name"] = "name";
})(GetOwnedAssetsSortValues = exports.GetOwnedAssetsSortValues || (exports.GetOwnedAssetsSortValues = {}));
var OrderValues;
(function (OrderValues) {
    OrderValues["ASC"] = "ASC";
    OrderValues["DESC"] = "DESC";
})(OrderValues = exports.OrderValues || (exports.OrderValues = {}));
var NFTOwnershipStatus;
(function (NFTOwnershipStatus) {
    NFTOwnershipStatus["LISTED"] = "LISTED";
    NFTOwnershipStatus["ARCHIVED"] = "ARCHIVED";
})(NFTOwnershipStatus = exports.NFTOwnershipStatus || (exports.NFTOwnershipStatus = {}));
var NFTOwnershipWalletType;
(function (NFTOwnershipWalletType) {
    NFTOwnershipWalletType["VAULT_ACCOUNT"] = "VAULT_ACCOUNT";
    NFTOwnershipWalletType["END_USER_WALLET"] = "END_USER_WALLET";
})(NFTOwnershipWalletType = exports.NFTOwnershipWalletType || (exports.NFTOwnershipWalletType = {}));
var TokenLinkPermission;
(function (TokenLinkPermission) {
    TokenLinkPermission["MINT"] = "MINT";
    TokenLinkPermission["BURN"] = "BURN";
})(TokenLinkPermission = exports.TokenLinkPermission || (exports.TokenLinkPermission = {}));
var SmartTransfersTicketDirection;
(function (SmartTransfersTicketDirection) {
    SmartTransfersTicketDirection["EXCHANGE"] = "EXCHANGE";
    SmartTransfersTicketDirection["SEND"] = "SEND";
    SmartTransfersTicketDirection["RECEIVE"] = "RECEIVE";
    SmartTransfersTicketDirection["INTERMEDIATE"] = "INTERMEDIATE";
})(SmartTransfersTicketDirection = exports.SmartTransfersTicketDirection || (exports.SmartTransfersTicketDirection = {}));
var SmartTransfersTicketStatus;
(function (SmartTransfersTicketStatus) {
    SmartTransfersTicketStatus["DRAFT"] = "DRAFT";
    SmartTransfersTicketStatus["PENDING_APPROVAL"] = "PENDING_APPROVAL";
    SmartTransfersTicketStatus["OPEN"] = "OPEN";
    SmartTransfersTicketStatus["IN_SETTLEMENT"] = "IN_SETTLEMENT";
    SmartTransfersTicketStatus["FULFILLED"] = "FULFILLED";
    SmartTransfersTicketStatus["EXPIRED"] = "EXPIRED";
    SmartTransfersTicketStatus["CANCELED"] = "CANCELED";
})(SmartTransfersTicketStatus = exports.SmartTransfersTicketStatus || (exports.SmartTransfersTicketStatus = {}));
var SmartTransferTicketTermStatus;
(function (SmartTransferTicketTermStatus) {
    SmartTransferTicketTermStatus["CREATED"] = "CREATED";
    SmartTransferTicketTermStatus["FUNDING"] = "FUNDING";
    SmartTransferTicketTermStatus["FUNDING_FAILED"] = "FUNDING_FAILED";
    SmartTransferTicketTermStatus["FUNDED"] = "FUNDED";
    SmartTransferTicketTermStatus["REJECTED"] = "REJECTED";
})(SmartTransferTicketTermStatus = exports.SmartTransferTicketTermStatus || (exports.SmartTransferTicketTermStatus = {}));
var NCW;
(function (NCW) {
    NCW.WalletIdHeader = "X-End-User-Wallet-Id";
})(NCW = exports.NCW || (exports.NCW = {}));
//# sourceMappingURL=types.js.map